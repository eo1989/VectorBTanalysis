import { ILSPCodeOverridesManager } from './tokens';
class CodeOverridesManager {
    constructor() {
        this._overrides = {};
    }
    get registry() {
        return this._overrides;
    }
    register(override, language) {
        if (!(language in override)) {
            this._overrides[language] = { cell: [], line: [] };
        }
        let overrides = this._overrides[language];
        switch (override.scope) {
            case 'cell':
                overrides.cell.push(override);
                break;
            case 'line':
                overrides.line.push(override);
                break;
        }
    }
}
export const CODE_OVERRIDES_MANAGER = {
    id: ILSPCodeOverridesManager.name,
    requires: [],
    activate: app => {
        return new CodeOverridesManager();
    },
    provides: ILSPCodeOverridesManager,
    autoStart: true
};
//# sourceMappingURL=index.js.map