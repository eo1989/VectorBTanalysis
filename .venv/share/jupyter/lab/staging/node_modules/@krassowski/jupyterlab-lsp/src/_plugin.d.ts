/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Language Server Protocol settings.
 */
export interface LanguageServer {
  language_servers?: LanguageServer1;
  features?: LSPFeatures;
  [k: string]: any;
}
/**
 * Language-server specific configuration, keyed by implementation, e.g:
 *
 * pyls: {
 *   serverSettings: {
 *     pyls: {
 *       plugins: {
 *         pydocstyle: {
 *           enabled: true
 *         },
 *         pyflakes: {
 *           enabled: false
 *         },
 *         flake8: {
 *           enabled: true
 *         }
 *       }
 *     }
 *   }
 * }
 *
 * Alternatively, using VSCode's naming convention:
 *
 * pyls: {
 *   serverSettings: {
 *     "pyls.plugins.pydocstyle.enabled": true,
 *     "pyls.plugins.pyflakes.enabled": false,
 *     "pyls.plugins.flake8.enabled": true
 *   }
 * }
 */
export interface LanguageServer1 {
  [k: string]: LanguageServer2;
}
/**
 * Client and server configurations for a single language server
 *
 * This interface was referenced by `LanguageServer1`'s JSON-Schema definition
 * via the `patternProperty` ".*".
 *
 * This interface was referenced by `LanguageServer`'s JSON-Schema
 * via the `definition` "language-server".
 */
export interface LanguageServer2 {
  serverSettings?: LanguageServerConfigurations;
  [k: string]: any;
}
/**
 * Configuration to be sent to language server over LSP when initialized: see the specific language server's documentation for more
 */
export interface LanguageServerConfigurations {
  [k: string]: any;
}
/**
 * Client-side features configuration
 */
export interface LSPFeatures {
  completion?: {
    showDocumentation?: boolean;
    continuousHinting?: boolean;
    suppressInvokeIn?: string[];
    [k: string]: any;
  };
  [k: string]: any;
}
/**
 * Configuration for the implementation of the LSP features
 *
 * This interface was referenced by `LanguageServer`'s JSON-Schema
 * via the `definition` "features".
 */
export interface CodeIntelligenceFeaturesConfiguration {
  completion?: {
    showDocumentation?: boolean;
    continuousHinting?: boolean;
    suppressInvokeIn?: string[];
    [k: string]: any;
  };
  [k: string]: any;
}
