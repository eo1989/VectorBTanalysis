import { Signal } from '@lumino/signaling';
export class FeatureSettings {
    constructor(settingRegistry, featureID) {
        this.settingRegistry = settingRegistry;
        this.changed = new Signal(this);
        if (!(featureID in settingRegistry.plugins)) {
            console.warn(`${featureID} settings schema could not be found and was not loaded`);
        }
        else {
            settingRegistry
                .load(featureID)
                .then(settings => {
                this.settings = settings;
                this.changed.emit();
                settings.changed.connect(() => {
                    this.settings = settings;
                    this.changed.emit();
                });
            })
                .catch(console.warn);
        }
    }
    get composite() {
        return this.settings.composite;
    }
    set(setting, value) {
        this.settings.set(setting, value).catch(console.warn);
    }
}
//# sourceMappingURL=feature.js.map