import { CompletionItemKindStrings } from '../../lsp';
import { LabIcon } from '@jupyterlab/ui-components';
import { IThemeManager } from '@jupyterlab/apputils';
import { Token } from '@lumino/coreutils';
import { JupyterFrontEndPlugin } from '@jupyterlab/application';
export declare type SvgString = string;
declare type requiredIcons = {
    [key in CompletionItemKindStrings]: SvgString;
};
export interface ICompletionIconSet extends requiredIcons {
    Kernel: SvgString;
}
interface ILicenseInfo {
    /**
     * Licence name.
     */
    name: string;
    /**
     * Abbreviation of the licence name;
     */
    abbreviation: string;
    /**
     * The copyright holder/owner name.
     */
    licensor: string;
    /**
     * Link to the full licence text.
     */
    link: string;
}
export interface ICompletionIconTheme {
    /**
     * Theme identifier (which can be part of a valid HTML class name).
     */
    id: string;
    /**
     * Name of the icons theme.
     */
    name: string;
    /**
     * Short name of the license of the icons included.
     */
    licence: ILicenseInfo;
    /**
     * An object mapping completion item kind name to a string with an SVG icon.
     */
    icons: {
        /**
         * The version to be used in the light mode.
         */
        light: ICompletionIconSet;
        /**
         * The version to be used in the dark mode.
         */
        dark?: ICompletionIconSet;
        /**
         * Icon properties to be set on each of the icons.
         * NOTE: setting className here will not work, as
         * it would be overwritten in the completer.
         * In order to style the icons use:
         * `.lsp-completer-theme-{id} .jp-Completer-icon svg`
         * instead, where {id} is the identifier of your theme.
         */
        options?: LabIcon.IProps;
    };
}
export interface ILSPCompletionIconsManager {
    get_icon(type: string): LabIcon | null;
    set_icon_theme(name: string | null): void;
    register_theme(theme: ICompletionIconTheme): void;
}
export declare const ILSPCompletionIconsManager: Token<ILSPCompletionIconsManager>;
export declare class CompletionIconManager implements ILSPCompletionIconsManager {
    protected themeManager: IThemeManager;
    protected current_icons: Map<string, LabIcon>;
    protected themes: Map<string, ICompletionIconTheme>;
    private current_theme_id;
    private icons_cache;
    constructor(themeManager: IThemeManager);
    protected is_theme_light(): boolean;
    protected create_icons(icon_set: ICompletionIconSet): Map<string, LabIcon>;
    protected update_icons_set(): void;
    get_icon(type: string): LabIcon;
    protected get current_theme_class(): string;
    set_icon_theme(id: string | null): void;
    protected get current_theme(): ICompletionIconTheme | null;
    register_theme(theme: ICompletionIconTheme): void;
    /**
     * Display the registered themes in a dialog,
     * both for the user to know what they can choose from,
     * and for the developer to quickly check how the icons
     * from each them look rendered.
     */
    display_themes(): void;
}
export declare const COMPLETION_ICONS_MANAGER: JupyterFrontEndPlugin<ILSPCompletionIconsManager>;
export {};
