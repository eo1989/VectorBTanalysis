import * as lsProtocol from 'vscode-languageserver-protocol';
import { ILspOptions, IPosition, LspWsConnection, IDocumentInfo } from 'lsp-ws-connection';
interface ILSPOptions extends ILspOptions {
}
export declare class LSPConnection extends LspWsConnection {
    protected documentsToOpen: IDocumentInfo[];
    constructor(options: ILSPOptions);
    sendOpenWhenReady(documentInfo: IDocumentInfo): void;
    protected onServerInitialized(params: lsProtocol.InitializeResult): void;
    sendSelectiveChange(changeEvent: lsProtocol.TextDocumentContentChangeEvent, documentInfo: IDocumentInfo): void;
    sendFullTextChange(text: string, documentInfo: IDocumentInfo): void;
    isRenameSupported(): boolean;
    rename(location: IPosition, documentInfo: IDocumentInfo, newName: string, emit?: boolean): Promise<lsProtocol.WorkspaceEdit>;
    connect(socket: WebSocket): this;
    private closing_manually;
    close(): void;
    private _sendChange;
}
export {};
